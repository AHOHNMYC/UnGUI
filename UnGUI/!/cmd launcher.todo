
Хотелки:
+* возможность ставить окно поверх всех
 * запоминание предыдушего положения окна (опционально)
 * автостарт по таймеру (опционально)
 * Drag'n'Drop файлов в специально отведённые места (например, в edit'ы, чтобы не писать утомительные пути)
+* поддержка загрузки разных конфигов для разного набора программ
 * отдельный конфиг с настройками
 * возможность схоронять настройки при выходе
 * перенаправление вывода консольных программ в отдельный лог/отдельное окно (опционально)
 * в случае перенаправления в окно — подсветка по регэкспам (как в zsh [или fish. Хуй проссышь, что там и где])
 * вкорячивание параметров в отдельное место (например, в середину конвейера) e.g:    cat %p | tail
 * расширенное вкорячивание параметров cat %p1 | tail %p2 : %p1 — место для подстановки первого параметра, %p2 — место для подстановки второго параметра
 * в поле выбора конфигов сделать поиск. Строка поиска должна по мере набора писаться в заголовке программы (e.g. 'Текущий фильтр: "азаза глаза"'), а результаты выпадающего списка динамически изменяться
+* сделать поле для разделителя параметров. Мало ли понадобится соединять аргументы (в роли которых будут команды) на пробелом а, например, " && ". Как вариант, ввести в группу ключ "group_prefix"
+* вместо радиобаттонов — выпадающие списки (может быть неудобно из-за того, что параметров не будет видно. С другой стороны появится больше степеней свободы. Поэтому ``positive vote'')
 * автодополнение в комбобоксах по DlgDirListComboBox
+* поддержка многоязычности
 * возможность писать несколько локализованных версий названий пунктов. e.g. value_1_rus, value_1_ukr, value_1 (а это английский); hint_1_rus, hint_1_ukr, hint_1
 * запилить Trackbar (ползунок)
 * запилить штуку, которая будет по нажатию ArrowUp/Down ин/декрементировать численное значение поля. Цифири подставлять. Гибрид Up-Down и Edit
+* возможно переименовать из "cmd launcher" в "Universal GUI"
+* сделать встраивание конфига в ресурсы при помощи ключа -e[mbed]
 * к комбобоксах для указания пути прикрутить индикатор с красным восклицательным знаком, который будет показываться, если путь, содержащийся в элементе, не существует
 * 

Полу-идеи:
 * графический ёба-редактор конфига
 * подумать над тем, как можно использовать BS_AUTO3STATE
 * подумать над приоритетом встроенного конфига и внешнего. Пока склоняюсь к тому, что внешний > встроенный. Удобно для отладки. Ну и это повысит неубиваемость, коея должна стать легендарной

Желаемые переключатели комсторки:
+ -c[onfig] <file>		 - выбор конфигурационного файла
+ -t[op] <0|1>			 - поверх всех окон
+ -l[anguage] <abbr|code>		 - выбор языка <3-хсимвольная ISO3166 аббревиатура или LangID от Микрософта>
-+  -a[utoclose] <s[oft]|f[orce]>	 - автоматическое закрытие программы после нажатия на "Запустить"
                                   <s-не закрываться при ошибке | f-игнорировать и не показывать ошибки, закрываться в любом случае>
  <file> <file> <file> ...	 — просто файл, который будет подставляться в конец всех параметров. Будет КРАйнЕ БЛЯТЬ полезно для перетаскивания
                                   файлов на программу. Сделал Drag'n'Drop — и вуаля — открылось окно с настройками для перекодирования в ffmpeg
                                   с уже подставленным на нужное место* файлом для обработки.
                                   Ещё один охуенный юзкейс — Drag'n'Drop нескольких файлов, один из которых — конфиг (например, и именем вида "*.clcnf.ini")
                                   так, в зависимости от перетаскиваемого конфига с фодними и теми же файлами можно будет сделать овердохуя действий
+ -? -h -help /? /h /help --? --h --help — ко-ко-кошко со справкой
-+ -e[mbed], -r[eplace], -l[ist], -d[ump] — управление ресурсами

* — !подумать, как это самое нужное место определить, ведь тот же ффмпег жуёт уравнения только вида "ffmpeg -ss 00:00:02 -i <file> -c copy ... ... ...",
    где пресловутый <file> находится не иначе как в середине строки, окруженный параметрами.
    Варианты: 1. Специальный токен (например, %cp1, %cp2, ..), вводимый в Edit
              2. Специальная группа с типом, например, "cmd_line_param" (более туманное решение)


Реализовано:
 + выход по Esc
 + парсинг конфига
 + всплывающие подсказки
 + ура! есть ёба поле с текстом, куда генерируется командная строка, состоящая из отмеченых пользователем параметров
 + manifest
 + базовая поддержка локализации — секция [lang] в конфигурационном файле
 + теперь наконец работает кнопка "Запустить"
 + расширенная поддержка локализации — считывание системной локали и поиск нужных секций в конфиге. В случае неудачи, всегда остаётся намертво вкомпилированный английский
 + размер окна изменяется в зависимости от количества параметров в конфиге
 + объединение группы опций в GroupBox — рамочку
 + подсказка для групбокса в виде кнопки со знаком вопроса
 + работающие радиокнопки (пришлось писать отдельный обработчик нажатий на них, ибо все кнопки на форме по умолчанию система связывала в один огромный переключатель)
 + работающая опция onTop (переименовано в on_top)
 + добавлена VersionInfo
 + теперь есть рабочая опция exit_after_start
 + за неимением интернетов, чтоб утащить (видел её у одного украинца), пришлось писать свою реализацию CommandLineToArgvA
 + переключатели -c -t -l
 + возможность встраивать конфиг внутрь программы при помощи ключа -e. Есть минимальный детект UPX`a и алгоритм рас/запаковки с его участием
 + поправлено поведение окна с ошибками
 + теперь можно создавать combobox`ы
 + появились ключи prefix_group и prefix. Назначение очевидно. Второй подставляется перед каждым ненулевым элементом, первый — если группа не пустая.
 + 
